name: "Build Multi-Arch Images"

on:
  workflow_dispatch:

jobs:
  build-amd64:
    name: "Build for linux/amd64"
    runs-on: "ubuntu-latest"

    env:
      DOCKER_REPOSITORY: "starknet/cairo"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: "Determine image version"
        run: |
          echo "VERSION=$(cat ./CAIRO_VERSION)" >> $GITHUB_ENV

      - name: "Build Docker image"
        run: |
          docker build --build-arg "CAIRO_VERSION=${VERSION}" -t ${DOCKER_REPOSITORY}:${VERSION}-amd64 -f ./Dockerfile .

      - name: "Push Docker image"
        run: |
          docker push ${DOCKER_REPOSITORY}:${VERSION}-amd64

  build-arm64:
    name: "Build for linux/arm64"
    runs-on: "ubuntu-latest"

    env:
      DOCKER_REPOSITORY: "starknet/cairo"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: "Determine image version"
        run: |
          echo "VERSION=$(cat ./CAIRO_VERSION)" >> $GITHUB_ENV

      - name: "Build Docker image"
        run: |
          docker build --build-arg "CAIRO_VERSION=${VERSION}" -t ${DOCKER_REPOSITORY}:${VERSION}-arm64 -f ./Dockerfile.cross.aarch64-musl .

      - name: "Push Docker image"
        run: |
          docker push ${DOCKER_REPOSITORY}:${VERSION}-arm64

  push:
    name: "Push multi-arch manifest"
    runs-on: "ubuntu-latest"
    needs: [build-amd64, build-arm64]

    env:
      DOCKER_REPOSITORY: "starknet/cairo"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: "Determine image version"
        run: |
          echo "VERSION=$(cat ./CAIRO_VERSION)" >> $GITHUB_ENV

      - name: "Pull Docker images"
        run: |
          docker pull ${DOCKER_REPOSITORY}:${VERSION}-amd64
          docker pull ${DOCKER_REPOSITORY}:${VERSION}-arm64

      - name: "Push Docker image"
        run: |
          docker manifest create ${DOCKER_REPOSITORY}:${VERSION} \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:latest \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest push ${DOCKER_REPOSITORY}:${VERSION}
          docker manifest push ${DOCKER_REPOSITORY}:latest
